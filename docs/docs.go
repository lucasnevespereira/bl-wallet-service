// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.WalletVersion}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Check the health status of the service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Health Check",
                "operationId": "health-check",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/wallet": {
            "post": {
                "description": "Create a wallet for the specified user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a Wallet",
                "operationId": "create-wallet",
                "parameters": [
                    {
                        "description": "Create Wallet Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateWalletResponse"
                        }
                    }
                }
            }
        },
        "/users/wallet/add": {
            "post": {
                "description": "Add funds to the wallet for the specified user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Funds to Wallet",
                "operationId": "add-funds",
                "parameters": [
                    {
                        "description": "Wallet Funds Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WalletFundsRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Idempotency Key",
                        "name": "x-idempotency-key",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WalletFundsResponse"
                        }
                    }
                }
            }
        },
        "/users/wallet/remove": {
            "post": {
                "description": "Remove funds from the wallet for the specified user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Remove Funds from Wallet",
                "operationId": "remove-funds",
                "parameters": [
                    {
                        "description": "Wallet Funds Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WalletFundsRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Idempotency Key",
                        "name": "x-idempotency-key",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WalletFundsResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/wallet": {
            "get": {
                "description": "Get wallet details for the specified user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Wallet",
                "operationId": "get-wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Wallet"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateWalletRequest": {
            "type": "object",
            "properties": {
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.CreateWalletResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.Wallet": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.WalletFundsRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.WalletFundsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
